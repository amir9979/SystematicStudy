package edu.berkeley.nlp.optimize;

import edu.berkeley.nlp.math.DoubleArrays;
import edu.berkeley.nlp.math.Function;
xit[i] = p[i] - pt[i];
pt[i] = p[i];
}
double fptt = fn.valueAt( ptt );
if (fptt < fp) {
double t=2.0*(fp-2.0*(lineMin)+fptt)*Math.sqrt(fp-(lineMin)-del)-del*Math.sqrt(fp-fptt);


* permutation vector piv of length m so that A(piv,:) = L*U. If m < n, then L
* is m-by-m and U is m-by-n.
* <P>
* The LU decompostion with pivoting always exists, even if the matrix is
// Use a &quot;left-looking&quot;, dot-product, Crout/Doolittle algorithm.
LU = new DenseMatrix<T>(toDecompose);


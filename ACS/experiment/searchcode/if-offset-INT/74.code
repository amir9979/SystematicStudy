else return findKth(A, 0, A.length, B, 0, B.length, len /2 + 1);
}
int findKth(int[] A, int offsetA, int m, int[] B, int offsetB, int n, int k){
if (m > n) 	return findKth(B, offsetB, n, A, offsetA, m, k);
if (k == 1) return Math.min(A[offsetA], B[offsetB]);
int pa = Math.min(k/2, m);
int pb = k - pa;
if (A[offsetA + pa - 1] < B[offsetB + pb - 1]) return findKth(A, offsetA + pa, m - pa, B, offsetB, n, k - pa);


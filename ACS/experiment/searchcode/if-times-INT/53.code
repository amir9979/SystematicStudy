public class IndefiniteIntegrationRules1 {
public static IAST RULES = List(
SetDelayed(Int(Times(C1,Power(Plus(Plus($p(&quot;a&quot;),Times($p(&quot;b&quot;,true),Power($p(&quot;x&quot;),C2))),Times($p(&quot;c&quot;,true),Power($p(&quot;x&quot;),C4))),CN1)),$p(&quot;x&quot;,$s(&quot;Symbol&quot;))),
Condition(Module(List(Set($s(&quot;q&quot;),Rt(Times(Times(CN1,$s(&quot;a&quot;)),Power($s(&quot;c&quot;),CN1)),C2))),Plus(Times(CN1,Dist(Times($s(&quot;c&quot;),Times($s(&quot;q&quot;),Power(Times(C2,$s(&quot;a&quot;)),CN1))),Int(Times(Plus($s(&quot;q&quot;),Power($s(&quot;x&quot;),C2)),Power(Plus(Plus($s(&quot;a&quot;),Times($s(&quot;b&quot;),Power($s(&quot;x&quot;),C2))),Times($s(&quot;c&quot;),Power($s(&quot;x&quot;),C4))),CN1)),$s(&quot;x&quot;)))),Times(CN1,Dist(Times($s(&quot;c&quot;),Times($s(&quot;q&quot;),Power(Times(C2,$s(&quot;a&quot;)),CN1))),Int(Times(Plus($s(&quot;q&quot;),Times(CN1,Power($s(&quot;x&quot;),C2))),Power(Plus(Plus($s(&quot;a&quot;),Times($s(&quot;b&quot;),Power($s(&quot;x&quot;),C2))),Times($s(&quot;c&quot;),Power($s(&quot;x&quot;),C4))),CN1)),$s(&quot;x&quot;)))))),And(And(FreeQ(List($s(&quot;a&quot;),$s(&quot;b&quot;),$s(&quot;c&quot;)),$s(&quot;x&quot;)),NegQ(Times($s(&quot;a&quot;),Power($s(&quot;c&quot;),CN1)))),Or(NegativeQ(Plus(Power($s(&quot;b&quot;),C2),Times(CN1,Times(Times(C4,$s(&quot;a&quot;)),$s(&quot;c&quot;))))),And(RationalQ(Times($s(&quot;a&quot;),Power($s(&quot;c&quot;),CN1))),Not(PositiveQ(Plus(Power($s(&quot;b&quot;),C2),Times(CN1,Times(Times(C4,$s(&quot;a&quot;)),$s(&quot;c&quot;))))))))))),


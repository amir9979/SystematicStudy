public String calculateSaddleSumDistr() {
if(bigN >= 2){
double sum = 0;
//mode of distribution, integer division (returns integer <= double result)!
while ((bigN - n >= bigX - i) &amp;&amp; (i <= Math.min(bigX, n))) {
double pdfi = Math.exp(Gamma.logGamma(n+1)-Gamma.logGamma(i+1)-Gamma.logGamma(n-i+1) + Gamma.logGamma(bigN-n+1)-Gamma.logGamma(bigX-i+1)-Gamma.logGamma(bigN-n-bigX+i+1)- Gamma.logGamma(bigN+1)+Gamma.logGamma(bigX+1)+Gamma.logGamma(bigN-bigX+1)) ;


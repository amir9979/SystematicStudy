private static Vector3f[] baseNorms = {new Vector3f(0.0F, 0.0F, 1.0F).normalizeLocal(), new Vector3f(1.0F, 0.0F, -1.0F).normalizeLocal(), new Vector3f(0.0F, 1.0F, 0.0F).normalizeLocal(), new Vector3f(-1.0F, 0.0F, -1.0F).normalizeLocal(), new Vector3f(0.0F, 0.0F, 1.0F).normalizeLocal(), new Vector3f(0.0F, 1.0F, 0.0F).normalizeLocal(), new Vector3f(0.0F, 0.0F, -1.0F).normalizeLocal(), new Vector3f(1.0F, 0.0F, 1.0F).normalizeLocal(), new Vector3f(0.0F, 1.0F, 0.0F).normalizeLocal(), new Vector3f(-1.0F, 0.0F, 1.0F).normalizeLocal(), new Vector3f(0.0F, 0.0F, -1.0F).normalizeLocal(), new Vector3f(0.0F, 1.0F, 0.0F).normalizeLocal()};
private static Vector3f[] cylNorms = {new Vector3f(1.0F, 0.0F, 0.0F), new Vector3f(cos45, 0.0F, -sin45), new Vector3f(0.0F, 0.0F, -1.0F), new Vector3f(-cos45, 0.0F, -sin45), new Vector3f(-1.0F, 0.0F, 0.0F), new Vector3f(-cos45, 0.0F, sin45), new Vector3f(0.0F, 0.0F, 1.0F), new Vector3f(cos45, 0.0F, sin45), new Vector3f(1.0F, 0.0F, 0.0F), new Vector3f(1.0F, 0.0F, 0.0F), new Vector3f(cos45, 0.0F, -sin45), new Vector3f(0.0F, 0.0F, -1.0F), new Vector3f(-cos45, 0.0F, -sin45), new Vector3f(-1.0F, 0.0F, 0.0F), new Vector3f(-cos45, 0.0F, sin45), new Vector3f(0.0F, 0.0F, 1.0F), new Vector3f(cos45, 0.0F, sin45), new Vector3f(1.0F, 0.0F, 0.0F)};


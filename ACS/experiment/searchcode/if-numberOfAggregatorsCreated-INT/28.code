private FilterableTermsEnum termsEnum;
private int numberOfAggregatorsCreated = 0;
private final Query filter;
private final TermsAggregator.BucketCountThresholds bucketCountThresholds;
return asMultiBucketAggregator(this, aggregationContext, parent);
}

numberOfAggregatorsCreated++;

if (valuesSource instanceof ValuesSource.Bytes) {


// Client will error on the first row if any if DATETIME conversion exception occurs
private static String[][][] nullIfResultsClient  ={
/*SMALLINT*/ {/*SMALLINT*/ {null,null,null,null},/*INTEGER*/ {null,null,null,&quot;2&quot;},/*BIGINT*/ {null,null,null,&quot;2&quot;},/*DECIMAL(10,5)*/ {null,null,null,&quot;2&quot;},/*REAL*/ {null,null,null,&quot;2&quot;},/*DOUBLE*/ {null,null,null,&quot;2&quot;},/*CHAR(60)*/ {&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;},/*VARCHAR(60)*/ {&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;},/*LONG VARCHAR*/ {&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;},/*CHAR(60) FOR BIT DATA*/ {&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;},/*VARCHAR(60) FOR BIT DATA*/ {&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;},/*LONG VARCHAR FOR BIT DATA*/ {&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;},/*CLOB(1k)*/ {&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;},/*DATE*/ {&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;},/*TIME*/ {&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;},/*TIMESTAMP*/ {&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;},/*BLOB(1k)*/ {&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;,&quot;Exception&quot;}},
assertEquals(
nullIfResults[firstColumnType][secondColumnType][row],
&quot;Exception&quot;);

